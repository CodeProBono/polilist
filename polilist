#!/usr/bin/env python

import sys
import getopt

import providers.base
DEFAULT_PROVIDER = 'softcache'

import parsers.base
active_parsers = {'federal_house_of_representatives':'http://www.aph.gov.au/house/members/mi-alpha.asp'}

USAGE_MESSAGE = """Usage: %s [options]
  [ -d | --debug ]                      Turn on debugging output.
  [ -p provider | --provider=provider ] Use the specific HTTP provider (default = passthrough).
""" % sys.argv[0]

def debugPrint(message):
    """
    Print a debugging message.
    """
    sys.stderr.write('DEBUG: %s\n' % message)

def parseArguments(options):
    """
    Parse command line arguments and write the result to the dictionary passed
    in.
    """
    optlist, args = getopt.getopt(sys.argv[1:], 'dp:', ['debug', 'provider='])

    if args:
        return False

    for opt in optlist:
        if opt[0] in ['-d', '--debug']:
            options['debug'] = True
        elif opt[0] in ['-p', '--provider']:
            options['provider'] = opt[1]

    return True

def main():
    # Setup default options.
    opts = { \
        'debug'   :False, \
        'provider':DEFAULT_PROVIDER \
    }

    # Parse command line arguments.
    if not parseArguments(opts):
        sys.stderr.write(USAGE_MESSAGE)
        return 1

    # Construct the HTTP provider.
    provider = None
    try:
        provider = providers.base.getProvider(opts['provider'])
    except Exception as inst:
        if opts['debug']:
            debugPrint(str(inst))
        sys.stderr.write('Could not create the requested provider.\n')
        return 1

    # Enumerate the parsers and retrieve contacts' details.
    for p in active_parsers.keys():
        try:
            parser = parsers.base.getParser(p, provider)
            parser.get(active_parsers[p])
        except Exception as inst:
            if opts['debug']:
                debugPrint(str(inst))
            sys.stderr.write('Could not create %s parser.\n' % p)
            return 1

if __name__ == '__main__':
    main()

